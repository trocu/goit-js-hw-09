{"mappings":"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","sources":["src/js/03-promises.js","node_modules/lodash/_baseRange.js","node_modules/lodash/eq.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_root.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/isObject.js","node_modules/lodash/isFunction.js","node_modules/lodash/isLength.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_isIndex.js","node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_trimmedEndIndex.js","node_modules/lodash/_baseTrim.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/isSymbol.js","node_modules/lodash/toNumber.js","node_modules/lodash/toFinite.js","node_modules/lodash/range.js","node_modules/lodash/_createRange.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nimport range from 'lodash/range';\n\n//Make a new promise as the result of the function\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', saveInput);\nfunction saveInput(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget.elements;\n  //Creates an array of numbers (lodash/range) for creating new promises\n  range(1, Number(amount.value) + 1).forEach(number => {\n    let position = number;\n    let stepDelay = step.value * number;\n    let startDelay = Number(delay.value) - step.value;\n    let delayed = startDelay + stepDelay;\n\n    //Create a new promise\n    createPromise(position, delayed)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  });\n}\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n"],"names":["$7Y9D8","parcelRequire","$21d95395709da5fd$var$nativeCeil","Math","ceil","$21d95395709da5fd$var$nativeMax","max","$21d95395709da5fd$exports","start","end","step","fromRight","index","length","result","Array","$d3b5784bbbc55641$exports","value","other","$631c6b00c6701f20$exports","$parcel$global","Object","$9bcf7a804d00ded1$var$freeSelf","self","$2388da93fa592950$exports","Function","Symbol","$8005b8efeeb9f4e7$var$objectProto","prototype","$8005b8efeeb9f4e7$var$hasOwnProperty","hasOwnProperty","$8005b8efeeb9f4e7$var$nativeObjectToString","toString","$8005b8efeeb9f4e7$var$symToStringTag","toStringTag","undefined","$8005b8efeeb9f4e7$exports","isOwn","call","tag","unmasked","e","$8777fc9d1b1902f9$var$nativeObjectToString","$8777fc9d1b1902f9$exports","$396b15940342a7f1$var$symToStringTag","$396b15940342a7f1$exports","$e4bea0192758232a$exports","type","$3c413d87f292fe2c$exports","$cb5309a5575a37b9$exports","$681032a0f414881e$exports","$ec0ca5ffb2ff14ec$var$reIsUint","$ec0ca5ffb2ff14ec$exports","test","$0fa22948390b654e$exports","object","$1751409297565aa8$var$reWhitespace","$1751409297565aa8$exports","string","charAt","$c67bd29bac11ba49$var$reTrimStart","$c67bd29bac11ba49$exports","slice","replace","$4a94b44c4940d5a5$exports","$42e9ee7d3311848a$exports","$94b27a3e78e3c823$var$reIsBadHex","$94b27a3e78e3c823$var$reIsBinary","$94b27a3e78e3c823$var$reIsOctal","$94b27a3e78e3c823$var$freeParseInt","parseInt","$94b27a3e78e3c823$exports","valueOf","isBinary","$8da36a9ee743aed0$exports","$972b234689e1deef$var$range","$8dae0da9e78ee487$exports","$972b234689e1deef$exports","document","querySelector","addEventListener","preventDefault","delay","delay1","amount","currentTarget","elements","$parcel$interopDefault","Number","forEach","number","position1","stepDelay","position","shouldResolve","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c9543c18.js.map"}