{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,UAC9BC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,GAAWR,EAAKS,SAcrCT,EAAKU,iBAAiB,SAASC,IAC7B,MAAMC,EAAY,CAChBT,MAAOC,EAAMS,MACbR,KAAMC,EAAKO,MACXN,OAAQC,EAAOK,OAEjBC,QAAQC,IAAIH,EAAU,IAGxB,IAAII,EAAU,EACVC,EAAU,KAEdjB,EAAKU,iBAAiB,cAEpBO,EAAUC,aAAY,KACpB,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAChCN,EAEFK,EAAQ,gBAGRC,EAAO,SAAS,IAGpBX,QAAQC,IAAIO,GACZA,EACGI,MAAKC,IACJb,QAAQC,IAAIY,EAAO,IAEpBC,OAAMC,IACLf,QAAQC,IAAIc,EAAM,IAGJ,KAAZb,GACJc,cAAcb,EAAQ,GAEvB","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst { delay, step, amount } = form.elements;\n\n// form.addEventListener('input', saveInput);\n// function saveInput(e) {\n//   const dataInput = {\n//     delay: delay.value,\n//     step: step.value,\n//     amount: amount.value,\n//   };\n//   console.log(dataInput);\n// }\n\n// form.addEventListener('submit', createPromise(amount, delay));\n\nform.addEventListener('input', e => {\n  const dataInput = {\n    delay: delay.value,\n    step: step.value,\n    amount: amount.value,\n  };\n  console.log(dataInput);\n});\n\nlet counter = 0;\nlet timerId = null;\n\nform.addEventListener('submit', createPromise());\nfunction createPromise(position, delay) {\n  timerId = setInterval(() => {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve('Hello world!');\n      } else {\n        // Reject\n        reject('Ooops!');\n      }\n    });\n    console.log(promise);\n    promise\n      .then(result => {\n        console.log(result);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    //Kills interval\n    if (++counter === 5) {\n      clearInterval(timerId);\n    }\n  }, 2000);\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","elements","addEventListener","e","dataInput","value","console","log","$47d4ff9957288465$var$counter","$47d4ff9957288465$var$timerId","setInterval","shouldResolve","Math","random","promise","Promise","resolve","reject","then","result","catch","error","clearInterval"],"version":3,"file":"03-promises.20490d7e.js.map"}